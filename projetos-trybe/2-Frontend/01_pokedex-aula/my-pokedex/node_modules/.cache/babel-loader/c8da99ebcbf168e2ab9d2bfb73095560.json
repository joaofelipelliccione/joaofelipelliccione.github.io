{"ast":null,"code":"var _jsxFileName = \"/home/joaofelipe/joaofelipelliccione.github.io/projetos-trybe/2-Frontend/01_pokedex-aula/my-pokedex/src/App.js\";\nimport React from 'react'; // 1° Passo: Importar o React para dentro do arquivo.\n\nimport Pokemon from './Pokemon';\nimport pokemonsData from \"./data\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  // 2° Passo: Criar componente React de classe 'App'.\n  constructor() {\n    // 3° Passo: Chamar a constructor() para sobrescrever suas ações default, geralmente definidas por debaixo dos panos.\n    super(); // 4° Passo: Chamar a super() para garantir que a lógica do React rode antes que as ações abaixo. Sem a super(), nada colocado dentro da constructor() funcionará.\n    // 6° Passo: Criação de um micro-objeto que armazenará os valores de cada um dos estados do componente. Esse micro-objeto, será o valor da key 'state', presente no macro-objeto 'this'.\n\n    this.state = {\n      pokemons: pokemonsData,\n      numOfClicksNextPokBtn: 0,\n      fireFilter: 'desativado',\n      psychicFilter: 'desativado'\n    }; // 7° Passo: Informando ao React que as funções definidas no 5° Passo, que não são nativas, estão ligadas (bind()) ao this do componente. \n\n    this.psychicBtnFunc = this.psychicBtnFunc.bind(this);\n    this.fireBtnFunc = this.fireBtnFunc.bind(this);\n    this.nextPokemonBtnFunc = this.nextPokemonBtnFunc.bind(this);\n  } // 5° Passo: Criar as funções responsáveis pela alteração de determinados estados do componente, definidos no 6° passo.\n\n\n  fireBtnFunc() {\n    // Função que estrutura o filtro de tipo 'Fire'. Ao ser acionada, ela altera os valores das keys 'fireFilter', 'psychicFilter' e 'pokemons'. As respectivas chaves estão presentes dentro de um micro-objeto que é o value da key 'state', presente no macro-objeto 'this'.\n    if (this.state.fireFilter === 'desativado') {\n      this.setState(() => ({\n        fireFilter: 'ativado',\n        psychicFilter: 'desativado',\n        pokemons: pokemonsData.filter(pokemons => pokemons.type === 'Fire')\n      }));\n    } else {\n      this.setState(() => ({\n        fireFilter: 'desativado',\n        pokemons: pokemonsData\n      }));\n    }\n  }\n\n  psychicBtnFunc() {\n    // Função que estrutura o filtro de tipo 'Psychic'. Ao ser acionada, ela altera os valores das keys 'psychicFilter', 'fireFilter', 'pokemons'. As respectivas chaves estão presentes dentro de um micro-objeto que é o value da key 'state', presente no macro-objeto 'this'.\n    if (this.state.psychicFilter === 'desativado') {\n      this.setState(() => ({\n        psychicFilter: 'ativado',\n        fireFilter: 'desativado',\n        pokemons: pokemonsData.filter(pokemons => pokemons.type === 'Psychic')\n      }));\n    } else {\n      this.setState(() => ({\n        psychicFilter: 'desativado',\n        pokemons: pokemonsData\n      }));\n    }\n  }\n\n  nextPokemonBtnFunc() {\n    // Função responsável pela lógica do botão 'Próximo Pokemon'. Ao ser acionada, ela altera os valores da key 'numOfClicksNextPokBtn'. Essa última chave está presente dentro de um micro-objeto que é o value da key 'state', presente no macro-objeto 'this'.\n    if (this.state.numOfClicksNextPokBtn === this.state.pokemons.length - 1) {\n      this.setState(() => ({\n        numOfClicksNextPokBtn: -1\n      }));\n    }\n\n    this.setState(lastState => ({\n      numOfClicksNextPokBtn: lastState.numOfClicksNextPokBtn + 1\n    }));\n  } // 8° Passo: Renderizando...\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        id: \"pageHeader\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Pok\\xE9dex\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n        id: \"pokemonsContainer\",\n        children: [/*#__PURE__*/_jsxDEV(Pokemon, {\n          pokemonData: this.state.pokemons,\n          pokemonDataIndex: this.state.numOfClicksNextPokBtn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"btnsContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.nextPokemonBtnFunc,\n            id: \"nextPokemonBtn\",\n            className: \"btns\",\n            children: \"Pr\\xF3ximo Pok\\xE9mon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.fireBtnFunc,\n            id: \"fireBtn\",\n            className: \"btns\",\n            children: [\"Fire: \", this.state.fireFilter]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.psychicBtnFunc,\n            id: \"psychicBtn\",\n            className: \"btns\",\n            children: [\"Psychic: \", this.state.psychicFilter]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App; // 9° Passo: Exportando o componente React de classe 'App', que será chamado dentro da ReactDOM.render(), localizada no arquivo index.js","map":{"version":3,"sources":["/home/joaofelipe/joaofelipelliccione.github.io/projetos-trybe/2-Frontend/01_pokedex-aula/my-pokedex/src/App.js"],"names":["React","Pokemon","pokemonsData","App","Component","constructor","state","pokemons","numOfClicksNextPokBtn","fireFilter","psychicFilter","psychicBtnFunc","bind","fireBtnFunc","nextPokemonBtnFunc","setState","filter","type","length","lastState","render"],"mappings":"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","sourcesContent":["import React from 'react'; // 1° Passo: Importar o React para dentro do arquivo.\nimport Pokemon from './Pokemon';\nimport pokemonsData from \"./data\";\nimport './App.css';\n\nclass App extends React.Component { // 2° Passo: Criar componente React de classe 'App'.\n  constructor() { // 3° Passo: Chamar a constructor() para sobrescrever suas ações default, geralmente definidas por debaixo dos panos.\n    super(); // 4° Passo: Chamar a super() para garantir que a lógica do React rode antes que as ações abaixo. Sem a super(), nada colocado dentro da constructor() funcionará.\n\n    // 6° Passo: Criação de um micro-objeto que armazenará os valores de cada um dos estados do componente. Esse micro-objeto, será o valor da key 'state', presente no macro-objeto 'this'.\n    this.state = {\n      pokemons: pokemonsData,\n      numOfClicksNextPokBtn: 0,\n      fireFilter: 'desativado',\n      psychicFilter: 'desativado',\n    }\n\n    // 7° Passo: Informando ao React que as funções definidas no 5° Passo, que não são nativas, estão ligadas (bind()) ao this do componente. \n    this.psychicBtnFunc = this.psychicBtnFunc.bind(this);\n    this.fireBtnFunc = this.fireBtnFunc.bind(this);\n    this.nextPokemonBtnFunc = this.nextPokemonBtnFunc.bind(this);\n  }\n\n  // 5° Passo: Criar as funções responsáveis pela alteração de determinados estados do componente, definidos no 6° passo.\n\n  fireBtnFunc() { // Função que estrutura o filtro de tipo 'Fire'. Ao ser acionada, ela altera os valores das keys 'fireFilter', 'psychicFilter' e 'pokemons'. As respectivas chaves estão presentes dentro de um micro-objeto que é o value da key 'state', presente no macro-objeto 'this'.\n    if(this.state.fireFilter === 'desativado') {\n      this.setState(() => ({\n        fireFilter: 'ativado',\n        psychicFilter: 'desativado',\n        pokemons: pokemonsData.filter((pokemons) => pokemons.type === 'Fire'),\n      }));\n    } else {\n      this.setState(() => ({\n        fireFilter: 'desativado',\n        pokemons: pokemonsData,\n      }));\n    }\n  }\n\n  psychicBtnFunc() { // Função que estrutura o filtro de tipo 'Psychic'. Ao ser acionada, ela altera os valores das keys 'psychicFilter', 'fireFilter', 'pokemons'. As respectivas chaves estão presentes dentro de um micro-objeto que é o value da key 'state', presente no macro-objeto 'this'.\n    if(this.state.psychicFilter === 'desativado') {\n      this.setState(() => ({\n        psychicFilter: 'ativado',\n        fireFilter: 'desativado',\n        pokemons: pokemonsData.filter((pokemons) => pokemons.type === 'Psychic'),\n      }));\n    } else {\n      this.setState(() => ({\n        psychicFilter: 'desativado',\n        pokemons: pokemonsData,\n      }));\n    }\n  }\n\n  nextPokemonBtnFunc() { // Função responsável pela lógica do botão 'Próximo Pokemon'. Ao ser acionada, ela altera os valores da key 'numOfClicksNextPokBtn'. Essa última chave está presente dentro de um micro-objeto que é o value da key 'state', presente no macro-objeto 'this'.\n    if(this.state.numOfClicksNextPokBtn === this.state.pokemons.length - 1) {\n      this.setState(() => ({\n        numOfClicksNextPokBtn: -1\n      }));\n    }\n    this.setState((lastState) => ({\n      numOfClicksNextPokBtn: lastState.numOfClicksNextPokBtn + 1\n    }));\n  }\n\n  // 8° Passo: Renderizando...\n  render() {\n    return(\n      <main>\n        <header id='pageHeader'>\n          <h1>Pokédex</h1>\n        </header>\n        <article id='pokemonsContainer'>\n          <Pokemon pokemonData={this.state.pokemons} pokemonDataIndex={this.state.numOfClicksNextPokBtn}></Pokemon>\n          <section className='btnsContainer'>\n            <button onClick={this.nextPokemonBtnFunc} id='nextPokemonBtn' className='btns'>Próximo Pokémon</button>\n            <button onClick={this.fireBtnFunc} id='fireBtn' className='btns'>Fire: {this.state.fireFilter}</button>\n            <button onClick={this.psychicBtnFunc} id='psychicBtn' className='btns'>Psychic: {this.state.psychicFilter}</button>\n          </section>\n        </article>\n      </main>\n  )\n  };\n}\n\nexport default App; // 9° Passo: Exportando o componente React de classe 'App', que será chamado dentro da ReactDOM.render(), localizada no arquivo index.js\n"]},"metadata":{},"sourceType":"module"}