{"ast":null,"code":"var _jsxFileName = \"/home/joaofelipe/\\xC1rea de Trabalho/frontend-online-store-individual/src/pages/Home.jsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { getProductsFromCategoryAndQuery } from '../services/api';\nimport Card from '../components/Card';\nimport Categories from '../components/Categories';\nimport Header from '../components/Header';\n\nclass Home extends React.Component {\n  constructor() {\n    super();\n\n    this.setCart = () => {\n      const cartItemsLocal = JSON.parse(localStorage.getItem('carrinho'));\n\n      if (Array.isArray(cartItemsLocal)) {\n        this.setState({\n          cartItems: cartItemsLocal\n        });\n      }\n    };\n\n    this.addToLocalCart = () => {\n      const {\n        cartItems\n      } = this.state;\n      localStorage.setItem('carrinho', JSON.stringify(cartItems));\n    };\n\n    this.handleClick = () => {\n      const {\n        categoryId,\n        text\n      } = this.state;\n      getProductsFromCategoryAndQuery(categoryId, text).then(response => {\n        this.setState({\n          didSearch: true,\n          results: response.results\n        });\n      });\n    };\n\n    this.addToCart = ({\n      target\n    }) => {\n      const {\n        id\n      } = target;\n      const {\n        results,\n        cartItems\n      } = this.state;\n      const objProduct = {\n        title: results[id].title,\n        thumbnail: results[id].thumbnail,\n        price: results[id].price,\n        id: results[id].id\n      };\n\n      if (!cartItems.some(item => item.title === objProduct.title)) {\n        this.setState(prevState => ({\n          cartItems: [...prevState.cartItems, objProduct]\n        }));\n      }\n    };\n\n    this.categoryChecked = async ({\n      target\n    }) => {\n      const {\n        text\n      } = this.state;\n      this.setState({\n        categoryId: target.id\n      });\n      const response = await getProductsFromCategoryAndQuery(target.id, text);\n      this.setState({\n        results: response.results,\n        didSearch: true\n      });\n    };\n\n    this.onInputChange = ({\n      target\n    }) => {\n      const {\n        name\n      } = target;\n      const formElementValue = target.type === 'checkbox' ? target.checked : target.value;\n      this.setState({\n        [name]: formElementValue\n      });\n    };\n\n    this.state = {\n      text: '',\n      categoryId: '',\n      results: [],\n      didSearch: false,\n      cartItems: []\n    };\n  }\n\n  componentDidMount() {\n    this.setCart();\n  }\n\n  componentDidUpdate() {\n    this.addToLocalCart();\n  }\n\n  componentWillUnmount() {\n    const {\n      results\n    } = this.state;\n    localStorage.setItem('results', JSON.stringify(results));\n  }\n\n  render() {\n    const {\n      results,\n      didSearch,\n      text,\n      cartItems\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"homepage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      cartItems: cartItems,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"section\", {\n      id: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"query-input\",\n      name: \"text\",\n      id: \"search\",\n      value: text,\n      onChange: this.onInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.handleClick,\n      \"data-testid\": \"query-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, \"pesquisar\"), !didSearch ? /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"home-initial-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, \"Digite algum termo de pesquisa ou escolha uma categoria.\") : results.map((item, i) => /*#__PURE__*/React.createElement(\"div\", {\n      key: item.id,\n      \"data-testid\": \"product\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      id: item.id,\n      title: item.title,\n      thumbnail: item.thumbnail,\n      price: item.price,\n      idItem: i,\n      addToCart: this.addToCart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }\n    }))), results.length !== 0 && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 35\n      }\n    }, \"Nenhum produto foi encontrado\"), /*#__PURE__*/React.createElement(\"aside\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Categories, {\n      categoryChecked: this.categoryChecked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/joaofelipe/√Årea de Trabalho/frontend-online-store-individual/src/pages/Home.jsx"],"names":["React","Link","getProductsFromCategoryAndQuery","Card","Categories","Header","Home","Component","constructor","setCart","cartItemsLocal","JSON","parse","localStorage","getItem","Array","isArray","setState","cartItems","addToLocalCart","state","setItem","stringify","handleClick","categoryId","text","then","response","didSearch","results","addToCart","target","id","objProduct","title","thumbnail","price","some","item","prevState","categoryChecked","onInputChange","name","formElementValue","type","checked","value","componentDidMount","componentDidUpdate","componentWillUnmount","render","map","i","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,+BAAT,QAAgD,iBAAhD;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,IAAN,SAAmBN,KAAK,CAACO,SAAzB,CAAmC;AACjCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAwBdC,OAxBc,GAwBJ,MAAM;AACd,YAAMC,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAvB;;AACA,UAAIC,KAAK,CAACC,OAAN,CAAcN,cAAd,CAAJ,EAAmC;AACjC,aAAKO,QAAL,CAAc;AAAEC,UAAAA,SAAS,EAAER;AAAb,SAAd;AACD;AACF,KA7Ba;;AAAA,SA+BdS,cA/Bc,GA+BG,MAAM;AACrB,YAAM;AAAED,QAAAA;AAAF,UAAgB,KAAKE,KAA3B;AACAP,MAAAA,YAAY,CAACQ,OAAb,CAAqB,UAArB,EAAiCV,IAAI,CAACW,SAAL,CAAeJ,SAAf,CAAjC;AACD,KAlCa;;AAAA,SAoCdK,WApCc,GAoCA,MAAM;AAClB,YAAM;AAAEC,QAAAA,UAAF;AAAcC,QAAAA;AAAd,UAAuB,KAAKL,KAAlC;AACAlB,MAAAA,+BAA+B,CAACsB,UAAD,EAAaC,IAAb,CAA/B,CAAkDC,IAAlD,CAAwDC,QAAD,IAAc;AACnE,aAAKV,QAAL,CAAc;AACZW,UAAAA,SAAS,EAAE,IADC;AAEZC,UAAAA,OAAO,EAAEF,QAAQ,CAACE;AAFN,SAAd;AAID,OALD;AAMD,KA5Ca;;AAAA,SA8CdC,SA9Cc,GA8CF,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAgB;AAC1B,YAAM;AAAEC,QAAAA;AAAF,UAASD,MAAf;AACA,YAAM;AAAEF,QAAAA,OAAF;AAAWX,QAAAA;AAAX,UAAyB,KAAKE,KAApC;AACA,YAAMa,UAAU,GAAG;AACjBC,QAAAA,KAAK,EAAEL,OAAO,CAACG,EAAD,CAAP,CAAYE,KADF;AAEjBC,QAAAA,SAAS,EAAEN,OAAO,CAACG,EAAD,CAAP,CAAYG,SAFN;AAGjBC,QAAAA,KAAK,EAAEP,OAAO,CAACG,EAAD,CAAP,CAAYI,KAHF;AAIjBJ,QAAAA,EAAE,EAAEH,OAAO,CAACG,EAAD,CAAP,CAAYA;AAJC,OAAnB;;AAMA,UAAI,CAACd,SAAS,CAACmB,IAAV,CAAgBC,IAAD,IAAUA,IAAI,CAACJ,KAAL,KAAeD,UAAU,CAACC,KAAnD,CAAL,EAAgE;AAC9D,aAAKjB,QAAL,CAAesB,SAAD,KAAgB;AAC5BrB,UAAAA,SAAS,EAAE,CAAC,GAAGqB,SAAS,CAACrB,SAAd,EAAyBe,UAAzB;AADiB,SAAhB,CAAd;AAGD;AACF,KA5Da;;AAAA,SA8DdO,eA9Dc,GA8DI,OAAO;AAAET,MAAAA;AAAF,KAAP,KAAsB;AACtC,YAAM;AAAEN,QAAAA;AAAF,UAAW,KAAKL,KAAtB;AACA,WAAKH,QAAL,CAAc;AAAEO,QAAAA,UAAU,EAAEO,MAAM,CAACC;AAArB,OAAd;AAEA,YAAML,QAAQ,GAAG,MAAMzB,+BAA+B,CAAC6B,MAAM,CAACC,EAAR,EAAYP,IAAZ,CAAtD;AACA,WAAKR,QAAL,CAAc;AAAEY,QAAAA,OAAO,EAAEF,QAAQ,CAACE,OAApB;AAA6BD,QAAAA,SAAS,EAAE;AAAxC,OAAd;AACD,KApEa;;AAAA,SAsEda,aAtEc,GAsEE,CAAC;AAAEV,MAAAA;AAAF,KAAD,KAAgB;AAC9B,YAAM;AAAEW,QAAAA;AAAF,UAAWX,MAAjB;AACA,YAAMY,gBAAgB,GAAGZ,MAAM,CAACa,IAAP,KAAgB,UAAhB,GAA6Bb,MAAM,CAACc,OAApC,GAA8Cd,MAAM,CAACe,KAA9E;AAEA,WAAK7B,QAAL,CAAc;AAAE,SAACyB,IAAD,GAAQC;AAAV,OAAd;AACD,KA3Ea;;AAEZ,SAAKvB,KAAL,GAAa;AACXK,MAAAA,IAAI,EAAE,EADK;AAEXD,MAAAA,UAAU,EAAE,EAFD;AAGXK,MAAAA,OAAO,EAAE,EAHE;AAIXD,MAAAA,SAAS,EAAE,KAJA;AAKXV,MAAAA,SAAS,EAAE;AALA,KAAb;AAOD;;AAED6B,EAAAA,iBAAiB,GAAG;AAClB,SAAKtC,OAAL;AACD;;AAEDuC,EAAAA,kBAAkB,GAAG;AACnB,SAAK7B,cAAL;AACD;;AAED8B,EAAAA,oBAAoB,GAAG;AACrB,UAAM;AAAEpB,MAAAA;AAAF,QAAc,KAAKT,KAAzB;AACAP,IAAAA,YAAY,CAACQ,OAAb,CAAqB,SAArB,EAAgCV,IAAI,CAACW,SAAL,CAAeO,OAAf,CAAhC;AACD;;AAuDDqB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAErB,MAAAA,OAAF;AAAWD,MAAAA,SAAX;AAAsBH,MAAAA,IAAtB;AAA4BP,MAAAA;AAA5B,QAA0C,KAAKE,KAArD;AAEA,wBACE;AAAK,MAAA,EAAE,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAEF,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAGE;AAAS,MAAA,EAAE,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAIE;AAAO,MAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,qBAAY,aADd;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,EAAE,EAAC,QAHL;AAIE,MAAA,KAAK,EAAGO,IAJV;AAKE,MAAA,QAAQ,EAAG,KAAKgB,aALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,eAaE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,OAAO,EAAG,KAAKlB,WAFjB;AAGE,qBAAY,cAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAbF,EAqBI,CAACK,SAAD,gBAEE;AAAG,qBAAY,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEAFF,GAKEC,OAAO,CAACsB,GAAR,CAAY,CAACb,IAAD,EAAOc,CAAP,kBACZ;AAAK,MAAA,GAAG,EAAGd,IAAI,CAACN,EAAhB;AAAqB,qBAAY,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AACE,MAAA,EAAE,EAAGM,IAAI,CAACN,EADZ;AAEE,MAAA,KAAK,EAAGM,IAAI,CAACJ,KAFf;AAGE,MAAA,SAAS,EAAGI,IAAI,CAACH,SAHnB;AAIE,MAAA,KAAK,EAAGG,IAAI,CAACF,KAJf;AAKE,MAAA,MAAM,EAAGgB,CALX;AAME,MAAA,SAAS,EAAG,KAAKtB,SANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADA,CA1BN,EAsCID,OAAO,CAACwB,MAAR,KAAmB,CAAnB,iBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAtC5B,eAwCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAY,MAAA,eAAe,EAAG,KAAKb,eAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAxCF,CADF;AA8CD;;AA/HgC;;AAkInC,eAAelC,IAAf","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { getProductsFromCategoryAndQuery } from '../services/api';\nimport Card from '../components/Card';\nimport Categories from '../components/Categories';\nimport Header from '../components/Header';\n\nclass Home extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      text: '',\n      categoryId: '',\n      results: [],\n      didSearch: false,\n      cartItems: [],\n    };\n  }\n\n  componentDidMount() {\n    this.setCart();\n  }\n\n  componentDidUpdate() {\n    this.addToLocalCart();\n  }\n\n  componentWillUnmount() {\n    const { results } = this.state;\n    localStorage.setItem('results', JSON.stringify(results));\n  }\n\n  setCart = () => {\n    const cartItemsLocal = JSON.parse(localStorage.getItem('carrinho'));\n    if (Array.isArray(cartItemsLocal)) {\n      this.setState({ cartItems: cartItemsLocal });\n    }\n  }\n\n  addToLocalCart = () => {\n    const { cartItems } = this.state;\n    localStorage.setItem('carrinho', JSON.stringify(cartItems));\n  }\n\n  handleClick = () => {\n    const { categoryId, text } = this.state;\n    getProductsFromCategoryAndQuery(categoryId, text).then((response) => {\n      this.setState({\n        didSearch: true,\n        results: response.results,\n      });\n    });\n  };\n\n  addToCart = ({ target }) => {\n    const { id } = target;\n    const { results, cartItems } = this.state;\n    const objProduct = {\n      title: results[id].title,\n      thumbnail: results[id].thumbnail,\n      price: results[id].price,\n      id: results[id].id,\n    };\n    if (!cartItems.some((item) => item.title === objProduct.title)) {\n      this.setState((prevState) => ({\n        cartItems: [...prevState.cartItems, objProduct],\n      }));\n    }\n  }\n\n  categoryChecked = async ({ target }) => {\n    const { text } = this.state;\n    this.setState({ categoryId: target.id });\n\n    const response = await getProductsFromCategoryAndQuery(target.id, text);\n    this.setState({ results: response.results, didSearch: true });\n  }\n\n  onInputChange = ({ target }) => {\n    const { name } = target;\n    const formElementValue = target.type === 'checkbox' ? target.checked : target.value;\n\n    this.setState({ [name]: formElementValue });\n  }\n\n  render() {\n    const { results, didSearch, text, cartItems } = this.state;\n\n    return (\n      <div id=\"homepage\">\n        <Header cartItems={cartItems}/>\n\n        <section id></section>\n        <label htmlFor=\"search\">\n          <input\n            data-testid=\"query-input\"\n            name=\"text\"\n            id=\"search\"\n            value={ text }\n            onChange={ this.onInputChange }\n          />\n        </label>\n        <button\n          type=\"button\"\n          onClick={ this.handleClick }\n          data-testid=\"query-button\"\n        >\n          pesquisar\n        </button>\n\n        { !didSearch\n          ? (\n            <p data-testid=\"home-initial-message\">\n              Digite algum termo de pesquisa ou escolha uma categoria.\n            </p>)\n          : results.map((item, i) => (\n            <div key={ item.id } data-testid=\"product\">\n              <Card\n                id={ item.id }\n                title={ item.title }\n                thumbnail={ item.thumbnail }\n                price={ item.price }\n                idItem={ i }\n                addToCart={ this.addToCart }\n              />\n            </div>\n          ))}\n        { results.length !== 0 && <p>Nenhum produto foi encontrado</p> }\n\n        <aside>\n          <Categories categoryChecked={ this.categoryChecked } />\n        </aside>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}