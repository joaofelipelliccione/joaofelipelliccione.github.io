{"ast":null,"code":"var _jsxFileName = \"/home/joaofelipe/joaofelipelliccione.github.io/projetos-trybe/2-Frontend/05_frontend-online-store-individual/src/pages/ProductDetails.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Review from '../components/Review';\nimport Header from '../components/Header';\n\nclass ProductDetails extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addToCart = ({\n      target\n    }) => {\n      // Função que permite a adição de um determinado produto ao carrinho de compras. Será passada para o componente Card, via props, e chamada no OnClick do botão \"Adicionar ao Carrinho\". || OBS: O Id do botão \"Adicionar ao Carrinho\", de cada Card, é igual ao índice do produto no array results.\n      const {\n        id\n      } = target;\n      const {\n        results,\n        cartItems\n      } = this.state;\n      const objProduct = {\n        productId: results[id].id,\n        title: results[id].title,\n        thumbnail: results[id].thumbnail,\n        price: results[id].price,\n        availableQuantity: results[id].available_quantity,\n        // Quantidade disponível daquele produto.\n        address: results[id].address,\n        quantity: 1,\n        // Quantidade adquirida pelo usuário\n        totalValue: results[id].price\n      };\n\n      if (!cartItems.some(item => item.title === objProduct.title)) {\n        // Condicional que evita a adição de 2 produtos iguais ao carrinho.\n        this.setState(prevState => ({\n          cartItems: [...prevState.cartItems, objProduct]\n        }), () => this.setLocStOnAddToCart(this.state.cartItems)); // Após atualização do estado de key igual à cartItems, atualiza-se o local storage.\n      }\n    };\n\n    const _cartItems = JSON.parse(localStorage.getItem('userCart'));\n\n    const searchResults = JSON.parse(localStorage.getItem(\"searchResults\"));\n    this.state = {\n      results: searchResults,\n      cartItems: _cartItems\n    };\n  }\n\n  componentWillUnmount() {\n    const {\n      cartItems\n    } = this.state;\n    localStorage.setItem('userCart', JSON.stringify(cartItems));\n  }\n\n  render() {\n    const {\n      location: {\n        state: {\n          title,\n          thumbnail,\n          price,\n          productIndex,\n          productId\n        }\n      }\n    } = this.props;\n    const {\n      match\n    } = this.props;\n    const {\n      id\n    } = match.params;\n    const {\n      cartItems\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      cartItems: cartItems,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      \"data-testid\": \"product-detail-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, title), /*#__PURE__*/React.createElement(\"img\", {\n      src: thumbnail,\n      alt: title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, price)), /*#__PURE__*/React.createElement(\"button\", {\n      \"data-testid\": \"product-detail-add-to-cart\",\n      type: \"button\",\n      id: productIndex,\n      onClick: this.addToCart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, \"Adicionar ao Carrinho\"), /*#__PURE__*/React.createElement(Review, {\n      id: productId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nProductDetails.propTypes = {\n  location: PropTypes.objectOf().isRequired,\n  match: PropTypes.objectOf().isRequired\n};\nexport default ProductDetails;","map":{"version":3,"sources":["/home/joaofelipe/joaofelipelliccione.github.io/projetos-trybe/2-Frontend/05_frontend-online-store-individual/src/pages/ProductDetails.jsx"],"names":["React","PropTypes","Review","Header","ProductDetails","Component","constructor","props","addToCart","target","id","results","cartItems","state","objProduct","productId","title","thumbnail","price","availableQuantity","available_quantity","address","quantity","totalValue","some","item","setState","prevState","setLocStOnAddToCart","JSON","parse","localStorage","getItem","searchResults","componentWillUnmount","setItem","stringify","render","location","productIndex","match","params","propTypes","objectOf","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Review from '../components/Review';\nimport Header from '../components/Header';\n\nclass ProductDetails extends React.Component {\n  constructor(props) {\n    super(props);\n    const cartItems = JSON.parse(localStorage.getItem('userCart'));\n    const searchResults = JSON.parse(localStorage.getItem(\"searchResults\"));\n\n    this.state = {\n      results: searchResults,\n      cartItems,\n    };\n  }\n\n  componentWillUnmount() {\n    const { cartItems } = this.state;\n    localStorage.setItem('userCart', JSON.stringify(cartItems));\n  }\n\n  addToCart = ({ target }) => { // Função que permite a adição de um determinado produto ao carrinho de compras. Será passada para o componente Card, via props, e chamada no OnClick do botão \"Adicionar ao Carrinho\". || OBS: O Id do botão \"Adicionar ao Carrinho\", de cada Card, é igual ao índice do produto no array results.\n    const { id } = target;\n    const { results, cartItems } = this.state;\n    const objProduct = {\n      productId: results[id].id,\n      title: results[id].title,\n      thumbnail: results[id].thumbnail,\n      price: results[id].price,\n      availableQuantity: results[id].available_quantity, // Quantidade disponível daquele produto.\n      address: results[id].address,\n      quantity: 1, // Quantidade adquirida pelo usuário\n      totalValue: results[id].price,\n    };\n\n    if (!cartItems.some((item) => item.title === objProduct.title)) { // Condicional que evita a adição de 2 produtos iguais ao carrinho.\n      this.setState((prevState) => ({\n        cartItems: [...prevState.cartItems, objProduct],\n      }), () => this.setLocStOnAddToCart(this.state.cartItems)); // Após atualização do estado de key igual à cartItems, atualiza-se o local storage.\n    }\n  }\n\n  render() {\n    const { location: { state: { title, thumbnail, price, productIndex, productId } } } = this.props;\n    const { match } = this.props;\n    const { id } = match.params;\n    const { cartItems } = this.state;\n\n    return (\n      <div>\n        <Header cartItems={ cartItems } />\n        <div>\n          <h3 data-testid=\"product-detail-name\">{title}</h3>\n          <img src={ thumbnail } alt={ title } />\n          <span>{price}</span>\n        </div>\n        <button\n          data-testid=\"product-detail-add-to-cart\"\n          type=\"button\"\n          id={ productIndex }\n          onClick={ this.addToCart }\n        >\n          Adicionar ao Carrinho\n        </button>\n        <Review id={ productId } />\n      </div>\n\n    );\n  }\n}\n\nProductDetails.propTypes = {\n  location: PropTypes.objectOf().isRequired,\n  match: PropTypes.objectOf().isRequired,\n};\n\nexport default ProductDetails;\n"]},"metadata":{},"sourceType":"module"}