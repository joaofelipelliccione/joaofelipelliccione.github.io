{"ast":null,"code":"var _jsxFileName = \"/home/joaofelipe/\\xC1rea de Trabalho/frontend-online-store-individual/src/pages/Cart.jsx\";\nimport React from 'react';\nimport CartCard from '../components/CartCard';\nimport Header from '../components/Header';\n\nclass Cart extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addItem = ({\n      target\n    }) => {\n      const {\n        purchaseTVCalculator\n      } = this.props;\n      const userCartFromLocSt = JSON.parse(localStorage.getItem(\"userCart\"));\n      userCartFromLocSt.forEach(microObj => {\n        if (microObj.productId === target.id) {\n          microObj.quantity += 1;\n          microObj.totalValue = microObj.price * microObj.quantity;\n        }\n      });\n      const newQuantity = userCartFromLocSt.find(({\n        productId\n      }) => productId === target.id).quantity;\n      this.setState({\n        productQuant: newQuantity\n      });\n      localStorage.setItem(\"userCart\", JSON.stringify(userCartFromLocSt));\n      purchaseTVCalculator();\n    };\n\n    this.insertItensInTheCart = () => {\n      // Função que capta os itens do carrinho salvos no local storage, sempre que a página Cart for montada.\n      const cartItems = JSON.parse(localStorage.getItem('userCart'));\n\n      if (Array.isArray(cartItems)) {\n        // Caso a key \"userCart\", de local storage, NÃO seja um array vazio...\n        this.setState({\n          cartItems\n        });\n      }\n    };\n\n    this.updateLocStUserCart = () => {\n      // Função que atualiza a key \"userCart\", de local storage, sempre que algum estado da página Cart for atualizado [componentDidUpdate()].\n      const {\n        cartItems\n      } = this.state;\n      localStorage.setItem('userCart', JSON.stringify(cartItems));\n    };\n\n    this.deleteCartItem = ({\n      target\n    }) => {\n      // Função que deleta produtos do carrinho.\n      const {\n        cartItems\n      } = this.state;\n      const productIndex = cartItems.findIndex(product => product.productId === target.id); // REF: https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex\n      // OBS: Todos os botões de deletar, possuem Id igual à ID do produto. Isso possibilita o funcionamento do target acima.\n\n      this.setState({\n        cartItems: cartItems.filter((_product, index) => index !== productIndex) // Retorna todos os produtos contidos no estado 'cartItems', menos o produto excluído.\n\n      });\n    };\n\n    this.purchaseTVCalculator = () => {\n      const userCartFromLocSt = JSON.parse(localStorage.getItem(\"userCart\"));\n      const totalValuesArray = userCartFromLocSt.map(microObj => microObj.totalValue);\n      const total = totalValuesArray.reduce((result, value) => result + value);\n      localStorage.setItem(\"purchaseTotalValue\", JSON.stringify(total));\n    };\n\n    this.jf = () => {\n      console.log('joão');\n      const resp = JSON.parse(localStorage.getItem(\"purchaseTotalValue\"));\n      this.setState({\n        purchaseTotalValue: resp\n      });\n    };\n\n    this.state = {\n      cartItems: [],\n      purchaseTotalValue: 0\n    };\n  }\n\n  componentDidMount() {\n    this.insertItensInTheCart();\n  }\n\n  componentDidUpdate() {\n    this.updateLocStUserCart();\n  }\n\n  render() {\n    const {\n      cartItems,\n      purchaseTotalValue\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"cartPage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      cartItems: cartItems,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"main\", {\n      id: \"cartProductsDisplay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, cartItems.length === 0 ? /*#__PURE__*/React.createElement(\"h3\", {\n      \"data-testid\": \"shopping-cart-empty-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }, \"Seu carrinho est\\xE1 vazio\") : cartItems.map(cartItem => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"eachCartCardContainer\",\n      key: cartItem.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CartCard, {\n      title: cartItem.title,\n      thumbnail: cartItem.thumbnail,\n      productPrice: cartItem.price,\n      productId: cartItem.productId,\n      addItem: this.addItem,\n      deleteCartItem: this.deleteCartItem,\n      purchaseTVCalculator: this.purchaseTVCalculator,\n      jf: this.jf,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, purchaseTotalValue.toFixed(2))));\n  }\n\n}\n\nexport default Cart;","map":{"version":3,"sources":["/home/joaofelipe/Área de Trabalho/frontend-online-store-individual/src/pages/Cart.jsx"],"names":["React","CartCard","Header","Cart","Component","constructor","props","addItem","target","purchaseTVCalculator","userCartFromLocSt","JSON","parse","localStorage","getItem","forEach","microObj","productId","id","quantity","totalValue","price","newQuantity","find","setState","productQuant","setItem","stringify","insertItensInTheCart","cartItems","Array","isArray","updateLocStUserCart","state","deleteCartItem","productIndex","findIndex","product","filter","_product","index","totalValuesArray","map","total","reduce","result","value","jf","console","log","resp","purchaseTotalValue","componentDidMount","componentDidUpdate","render","length","cartItem","title","thumbnail","toFixed"],"mappings":"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","sourcesContent":["import React from 'react';\nimport CartCard from '../components/CartCard';\nimport Header from '../components/Header';\n\nclass Cart extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      cartItems: [],\n      purchaseTotalValue: 0,\n    };\n  }\n\n  addItem = ({ target }) => {\n    const { purchaseTVCalculator } = this.props\n    const userCartFromLocSt = JSON.parse(localStorage.getItem(\"userCart\"));\n\n    userCartFromLocSt.forEach((microObj) => {\n      if (microObj.productId === target.id) {\n        microObj.quantity += 1;\n        microObj.totalValue = microObj.price * microObj.quantity;\n      }\n    });\n\n    const newQuantity = userCartFromLocSt.find(({ productId }) => productId === target.id).quantity;\n\n    this.setState({ productQuant: newQuantity });\n    localStorage.setItem(\"userCart\", JSON.stringify(userCartFromLocSt));\n    purchaseTVCalculator();\n  }\n\n  componentDidMount() {\n    this.insertItensInTheCart();\n  }\n\n  componentDidUpdate() {\n    this.updateLocStUserCart();\n  }\n\n  insertItensInTheCart = () => { // Função que capta os itens do carrinho salvos no local storage, sempre que a página Cart for montada.\n    const cartItems = JSON.parse(localStorage.getItem('userCart'));\n\n    if (Array.isArray(cartItems)) { // Caso a key \"userCart\", de local storage, NÃO seja um array vazio...\n      this.setState({ cartItems });\n    }\n  }\n\n  updateLocStUserCart = () => { // Função que atualiza a key \"userCart\", de local storage, sempre que algum estado da página Cart for atualizado [componentDidUpdate()].\n    const { cartItems } = this.state;\n    localStorage.setItem('userCart', JSON.stringify(cartItems));\n  }\n\n  deleteCartItem = ({ target }) => { // Função que deleta produtos do carrinho.\n    const { cartItems } = this.state;\n    const productIndex = cartItems.findIndex((product) => product.productId === target.id); // REF: https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex\n    // OBS: Todos os botões de deletar, possuem Id igual à ID do produto. Isso possibilita o funcionamento do target acima.\n\n    this.setState({\n      cartItems: cartItems.filter((_product, index) => index !== productIndex), // Retorna todos os produtos contidos no estado 'cartItems', menos o produto excluído.\n    });\n  }\n\n  purchaseTVCalculator = () => {\n    const userCartFromLocSt = JSON.parse(localStorage.getItem(\"userCart\"));\n\n    const totalValuesArray = userCartFromLocSt.map((microObj) => microObj.totalValue);\n\n    const total = totalValuesArray.reduce((result, value) => result + value);\n\n    localStorage.setItem(\"purchaseTotalValue\", JSON.stringify(total));\n  }\n\n  jf = () => {\n    console.log('joão')\n    const resp = JSON.parse(localStorage.getItem(\"purchaseTotalValue\"));\n    this.setState({ purchaseTotalValue: resp })\n  }\n\n  render() {\n    const { cartItems, purchaseTotalValue } = this.state;\n\n    return (\n      <div id=\"cartPage\">\n        <Header cartItems={cartItems}/>\n\n        <main id=\"cartProductsDisplay\">\n          {cartItems.length === 0\n            ? <h3 data-testid=\"shopping-cart-empty-message\">Seu carrinho está vazio</h3>\n            : cartItems.map((cartItem) => (\n              <div className=\"eachCartCardContainer\" key={ cartItem.title }>\n                <CartCard\n                  title={ cartItem.title }\n                  thumbnail={ cartItem.thumbnail }\n                  productPrice={ cartItem.price }\n                  productId={ cartItem.productId }\n                  addItem={ this.addItem }\n                  deleteCartItem={ this.deleteCartItem }\n                  purchaseTVCalculator={ this.purchaseTVCalculator }\n                  jf={ this.jf }\n                />\n              </div>\n            ))}\n          <h3>{purchaseTotalValue.toFixed(2)}</h3>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}