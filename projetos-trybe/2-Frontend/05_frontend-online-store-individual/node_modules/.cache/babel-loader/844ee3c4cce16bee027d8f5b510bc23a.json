{"ast":null,"code":"var _jsxFileName = \"/home/joaofelipe/joaofelipelliccione.github.io/projetos-trybe/2-Frontend/05_frontend-online-store-individual/src/pages/Home.jsx\";\nimport React from 'react';\nimport { getProductsFromCategoryAndQuery } from '../services/api';\nimport Card from '../components/Card';\nimport Categories from '../components/Categories';\nimport Header from '../components/Header';\n\nclass Home extends React.Component {\n  constructor() {\n    super();\n\n    this.settingLocalStorage = () => {\n      // Função que define o local storage do usuário, em seu primeiro acesso ao website. É chamada no Constructor(), logo, é como se estivesse sendo chamada no componentWillMount().\n      const userCart = JSON.parse(localStorage.getItem(\"userCart\"));\n\n      if (userCart === null || userCart.length === 0) {\n        localStorage.setItem('userCart', JSON.stringify([]));\n        localStorage.setItem('totalItemsOnCart', JSON.stringify(0));\n        localStorage.setItem('purchaseTotalValue', JSON.stringify(0));\n      }\n    };\n\n    this.handleClick = async () => {\n      // Função que realiza a requisição para API getProductsFromCategoryAndQuery(), baseada no termo pesquisado. Será chamada no onClick do botão de pesquisar.\n      this.setState({\n        loading: true\n      });\n      const {\n        categoryId,\n        userSearchedItem\n      } = this.state;\n      const response = await getProductsFromCategoryAndQuery(categoryId, userSearchedItem);\n      this.setState({\n        didSearch: true,\n        results: response.results,\n        loading: false\n      });\n    };\n\n    this.onInputChange = ({\n      target\n    }) => {\n      // Função que altera o estado 'userSearchedItem', no momento que o usuário realiza uma busca. Será chamada no onChange de #searchBar.\n      const {\n        name\n      } = target;\n      const formElementValue = target.type === 'checkbox' ? target.checked : target.value;\n      this.setState({\n        [name]: formElementValue\n      });\n    };\n\n    this.categoryChecked = async ({\n      target\n    }) => {\n      // Função que realiza a requisição para API getProductsFromCategoryAndQuery(), baseada na categoria clicada. Será chamada no onChange de cada radio, de cada categoria.\n      const {\n        userSearchedItem\n      } = this.state;\n      this.setState({\n        loading: true,\n        categoryId: target.id\n      });\n      const response = await getProductsFromCategoryAndQuery(target.id, userSearchedItem);\n      this.setState({\n        results: response.results,\n        didSearch: true,\n        loading: false\n      });\n    };\n\n    this.getLocStUserCart = () => {\n      // Função que capta os itens do carrinho salvos no local storage, sempre que a página Home for montada. Tal função evita que o carrinho do usuário seja restaurado.\n      const cartItemsFromLocSt = JSON.parse(localStorage.getItem('userCart'));\n\n      if (Array.isArray(cartItemsFromLocSt)) {\n        // Caso a key \"userCart\", de local storage, NÃO seja um array vazio...\n        this.setState({\n          cartItems: cartItemsFromLocSt\n        });\n      }\n    };\n\n    this.setLocStOnAddToCart = updatedCartItems => {\n      // Função que aloca, no local storage, importantes informações, sempre que um novo item for adicionado ao carrinho. É chamada dentro da addToCart(), abaixo.\n      // Atualização do carrinho, que passa a ter um novo item:\n      localStorage.setItem('userCart', JSON.stringify(updatedCartItems)); // Atualização da quantidade de itens no carrinho:\n\n      const quantitiesArray = updatedCartItems.map(microObj => microObj.quantity);\n      const totalQuant = quantitiesArray.reduce((result, value) => result + value);\n      localStorage.setItem(\"totalItemsOnCart\", JSON.stringify(totalQuant)); // Atualização do atual valor total (R$) do carrinho:\n\n      const totalValuesArray = updatedCartItems.map(microObj => microObj.totalValue);\n      const totalValue = totalValuesArray.reduce((result, value) => result + value);\n      localStorage.setItem(\"purchaseTotalValue\", JSON.stringify(totalValue));\n    };\n\n    this.addToCart = ({\n      target\n    }) => {\n      // Função que permite a adição de um determinado produto ao carrinho de compras. Será passada para o componente Card, via props, e chamada no OnClick do botão \"Adicionar ao Carrinho\". || OBS: O Id do botão \"Adicionar ao Carrinho\", de cada Card, é igual ao índice do produto no array results.\n      const {\n        id\n      } = target;\n      const {\n        results,\n        cartItems\n      } = this.state;\n      const objProduct = {\n        productId: results[id].id,\n        title: results[id].title,\n        thumbnail: results[id].thumbnail,\n        price: results[id].price,\n        address: results[id].address,\n        quantity: 1,\n        totalValue: results[id].price\n      };\n\n      if (!cartItems.some(item => item.title === objProduct.title)) {\n        // Condicional que evita a adição de 2 produtos iguais ao carrinho.\n        this.setState(prevState => ({\n          cartItems: [...prevState.cartItems, objProduct]\n        }), () => this.setLocStOnAddToCart(this.state.cartItems));\n      }\n    };\n\n    this.settingLocalStorage();\n    this.state = {\n      loading: false,\n      userSearchedItem: '',\n      categoryId: '',\n      results: [],\n      didSearch: false,\n      cartItems: []\n    };\n  }\n\n  componentDidMount() {\n    this.getLocStUserCart();\n  }\n\n  render() {\n    const {\n      loading,\n      userSearchedItem,\n      results,\n      didSearch\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"homepage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      loading: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"section\", {\n      id: \"homepageCenter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"searchContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"searchBar\",\n      \"data-testid\": \"query-input\",\n      name: \"userSearchedItem\",\n      value: userSearchedItem,\n      onChange: this.onInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.handleClick,\n      \"data-testid\": \"query-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      role: \"img\",\n      \"aria-label\": \"emoji-lupa\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }, \"\\uD83D\\uDD0E\"))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"productsDisplay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }, !didSearch ? /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"home-initial-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, \"Busque um produto ou escolha uma categoria!\") : results.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cardContainer1\",\n      key: item.id,\n      \"data-testid\": \"product\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      productId: item.id,\n      title: item.title,\n      thumbnail: item.thumbnail,\n      price: item.price,\n      address: item.address,\n      productIndex: index,\n      addToCart: this.addToCart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(\"aside\", {\n      id: \"categoriesContainer1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Categories, {\n      categoryChecked: this.categoryChecked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/joaofelipe/joaofelipelliccione.github.io/projetos-trybe/2-Frontend/05_frontend-online-store-individual/src/pages/Home.jsx"],"names":["React","getProductsFromCategoryAndQuery","Card","Categories","Header","Home","Component","constructor","settingLocalStorage","userCart","JSON","parse","localStorage","getItem","length","setItem","stringify","handleClick","setState","loading","categoryId","userSearchedItem","state","response","didSearch","results","onInputChange","target","name","formElementValue","type","checked","value","categoryChecked","id","getLocStUserCart","cartItemsFromLocSt","Array","isArray","cartItems","setLocStOnAddToCart","updatedCartItems","quantitiesArray","map","microObj","quantity","totalQuant","reduce","result","totalValuesArray","totalValue","addToCart","objProduct","productId","title","thumbnail","price","address","some","item","prevState","componentDidMount","render","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { getProductsFromCategoryAndQuery } from '../services/api';\nimport Card from '../components/Card';\nimport Categories from '../components/Categories';\nimport Header from '../components/Header';\n\nclass Home extends React.Component {\n  constructor() {\n    super();\n    this.settingLocalStorage();\n\n    this.state = {\n      loading: false,\n      userSearchedItem: '',\n      categoryId: '',\n      results: [],\n      didSearch: false,\n      cartItems: [],\n    };\n  }\n\n  settingLocalStorage = () => { // Função que define o local storage do usuário, em seu primeiro acesso ao website. É chamada no Constructor(), logo, é como se estivesse sendo chamada no componentWillMount().\n    const userCart = JSON.parse(localStorage.getItem(\"userCart\"));\n\n    if (userCart === null || userCart.length === 0) {\n      localStorage.setItem('userCart', JSON.stringify([]));\n      localStorage.setItem('totalItemsOnCart', JSON.stringify(0));\n      localStorage.setItem('purchaseTotalValue', JSON.stringify(0));\n    } \n  }\n\n  componentDidMount() {\n    this.getLocStUserCart();\n  }\n\n  handleClick = async () => { // Função que realiza a requisição para API getProductsFromCategoryAndQuery(), baseada no termo pesquisado. Será chamada no onClick do botão de pesquisar.\n    this.setState({ loading: true });\n    const { categoryId, userSearchedItem } = this.state;\n\n    const response = await getProductsFromCategoryAndQuery(categoryId, userSearchedItem);\n\n    this.setState({\n      didSearch: true,\n      results: response.results,\n      loading: false,\n    });\n  }\n\n  onInputChange = ({ target }) => { // Função que altera o estado 'userSearchedItem', no momento que o usuário realiza uma busca. Será chamada no onChange de #searchBar.\n    const { name } = target;\n    const formElementValue = target.type === 'checkbox' ? target.checked : target.value;\n\n    this.setState({ [name]: formElementValue });\n  }\n\n  categoryChecked = async ({ target }) => { // Função que realiza a requisição para API getProductsFromCategoryAndQuery(), baseada na categoria clicada. Será chamada no onChange de cada radio, de cada categoria.\n    const { userSearchedItem } = this.state;\n    this.setState({ loading: true, categoryId: target.id });\n\n    const response = await getProductsFromCategoryAndQuery(target.id, userSearchedItem);\n    this.setState({ results: response.results, didSearch: true, loading: false });\n  }\n\n  getLocStUserCart = () => { // Função que capta os itens do carrinho salvos no local storage, sempre que a página Home for montada. Tal função evita que o carrinho do usuário seja restaurado.\n    const cartItemsFromLocSt = JSON.parse(localStorage.getItem('userCart'));\n\n    if (Array.isArray(cartItemsFromLocSt)) { // Caso a key \"userCart\", de local storage, NÃO seja um array vazio...\n      this.setState({ cartItems: cartItemsFromLocSt });\n    }\n  }\n\n  setLocStOnAddToCart = (updatedCartItems) => { // Função que aloca, no local storage, importantes informações, sempre que um novo item for adicionado ao carrinho. É chamada dentro da addToCart(), abaixo.\n    // Atualização do carrinho, que passa a ter um novo item:\n    localStorage.setItem('userCart', JSON.stringify(updatedCartItems));\n\n    // Atualização da quantidade de itens no carrinho:\n    const quantitiesArray = updatedCartItems.map((microObj) => microObj.quantity);\n    const totalQuant = quantitiesArray.reduce((result, value) => result + value);\n    localStorage.setItem(\"totalItemsOnCart\", JSON.stringify(totalQuant));\n\n    // Atualização do atual valor total (R$) do carrinho:\n    const totalValuesArray = updatedCartItems.map((microObj) => microObj.totalValue);\n    const totalValue = totalValuesArray.reduce((result, value) => result + value);\n    localStorage.setItem(\"purchaseTotalValue\", JSON.stringify(totalValue));\n  }\n\n  addToCart = ({ target }) => { // Função que permite a adição de um determinado produto ao carrinho de compras. Será passada para o componente Card, via props, e chamada no OnClick do botão \"Adicionar ao Carrinho\". || OBS: O Id do botão \"Adicionar ao Carrinho\", de cada Card, é igual ao índice do produto no array results.\n    const { id } = target;\n    const { results, cartItems } = this.state;\n    const objProduct = {\n      productId: results[id].id,\n      title: results[id].title,\n      thumbnail: results[id].thumbnail,\n      price: results[id].price,\n      address: results[id].address,\n      quantity: 1,\n      totalValue: results[id].price,\n    };\n\n    if (!cartItems.some((item) => item.title === objProduct.title)) { // Condicional que evita a adição de 2 produtos iguais ao carrinho.\n      this.setState((prevState) => ({\n        cartItems: [...prevState.cartItems, objProduct],\n      }), () => this.setLocStOnAddToCart(this.state.cartItems));\n    }\n  }\n\n  render() {\n    const { loading, userSearchedItem, results, didSearch } = this.state;\n\n    return (\n      <div id=\"homepage\">\n        <Header loading={ loading } />\n\n        <section id=\"homepageCenter\">\n          <div id=\"searchContainer\">\n            <label htmlFor=\"search\">\n              <input\n                id=\"searchBar\"\n                data-testid=\"query-input\"\n                name=\"userSearchedItem\"\n                value={ userSearchedItem }\n                onChange={ this.onInputChange }\n              />\n            </label>\n            <button\n              type=\"button\"\n              onClick={ this.handleClick }\n              data-testid=\"query-button\"\n            >\n              <span role=\"img\" aria-label=\"emoji-lupa\">🔎</span>\n            </button>\n          </div>\n          <div id=\"productsDisplay\">\n            { !didSearch\n              ? (\n                <p data-testid=\"home-initial-message\">\n                  Busque um produto ou escolha uma categoria!\n                </p>)\n              : results.map((item, index) => (\n                <div className=\"cardContainer1\" key={ item.id } data-testid=\"product\">\n                  <Card\n                    productId={ item.id }\n                    title={ item.title }\n                    thumbnail={ item.thumbnail }\n                    price={ item.price }\n                    address={ item.address }\n                    productIndex={ index }\n                    addToCart={ this.addToCart }\n                  />\n                </div>\n              ))}\n          </div>\n          <aside id=\"categoriesContainer1\">\n            <Categories categoryChecked={ this.categoryChecked } />\n          </aside>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}