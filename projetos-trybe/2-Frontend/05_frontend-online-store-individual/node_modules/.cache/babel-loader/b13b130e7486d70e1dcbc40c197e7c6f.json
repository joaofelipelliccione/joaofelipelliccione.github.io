{"ast":null,"code":"var _jsxFileName = \"/home/joaofelipe/joaofelipelliccione.github.io/projetos-trybe/2-Frontend/05_frontend-online-store-individual/src/components/Card.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport '../styles/Card.css';\n\nclass Card extends React.Component {\n  render() {\n    const {\n      productId,\n      title,\n      thumbnail,\n      price,\n      availableQuantity,\n      address,\n      productIndex,\n      addToCart\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cardContainer2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Link // Todo o card é englobado por um componente <Link>. Tal componente permite que, quando o Card seja clicado, a página ProductDetails seja aberta.\n    , {\n      to: {\n        pathname: `/products/${productId}`,\n        // É importante pontuar que, cada Card, possui sua própria página ProductDetails, cuja URL será /products/Id-do-item-clicado.\n        state: {\n          // A página ProductDetails, que é um componente, recebe informações (title, thumbnail, price...) referentes ao produto. Essas informações são passadas via <Link /> e encontradas em \"const { location: { state: { title, thumbnail, price, idItem } } } = this.props\".\n          productId,\n          title,\n          thumbnail,\n          price,\n          availableQuantity,\n          address,\n          productIndex\n        }\n      },\n      \"data-testid\": \"product-detail-link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"eachCard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, title), /*#__PURE__*/React.createElement(\"img\", {\n      src: thumbnail,\n      alt: title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, `R$ ${price.toFixed(2)}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, `${address.city_name}, ${address.state_name}`))), /*#__PURE__*/React.createElement(\"button\", {\n      id: productIndex,\n      className: true,\n      \"data-testid\": \"product-add-to-cart\",\n      type: \"button\",\n      onClick: addToCart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, \"Adicionar ao Carrinho\"));\n  }\n\n}\n\nCard.propTypes = {\n  productId: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  thumbnail: PropTypes.string.isRequired,\n  price: PropTypes.number.isRequired,\n  availableQuantity: PropTypes.number.isRequired,\n  productIndex: PropTypes.number.isRequired,\n  addToCart: PropTypes.func.isRequired\n};\nexport default Card;","map":{"version":3,"sources":["/home/joaofelipe/joaofelipelliccione.github.io/projetos-trybe/2-Frontend/05_frontend-online-store-individual/src/components/Card.jsx"],"names":["React","PropTypes","Link","Card","Component","render","productId","title","thumbnail","price","availableQuantity","address","productIndex","addToCart","props","pathname","state","toFixed","city_name","state_name","propTypes","string","isRequired","number","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,oBAAP;;AAEA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAmC;AACjCC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA,KAAb;AAAoBC,MAAAA,SAApB;AAA+BC,MAAAA,KAA/B;AAAsCC,MAAAA,iBAAtC;AAAyDC,MAAAA,OAAzD;AAAkEC,MAAAA,YAAlE;AAAgFC,MAAAA;AAAhF,QAA8F,KAAKC,KAAzG;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM;AAAN;AACE,MAAA,EAAE,EAAG;AACHC,QAAAA,QAAQ,EAAG,aAAYT,SAAU,EAD9B;AACiC;AACpCU,QAAAA,KAAK,EAAE;AAAE;AACPV,UAAAA,SADK;AAELC,UAAAA,KAFK;AAGLC,UAAAA,SAHK;AAILC,UAAAA,KAJK;AAKLC,UAAAA,iBALK;AAMLC,UAAAA,OANK;AAOLC,UAAAA;AAPK;AAFJ,OADP;AAaE,qBAAY,qBAbd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAeE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAML,KAAN,CADF,eAEE;AAAK,MAAA,GAAG,EAAGC,SAAX;AAAuB,MAAA,GAAG,EAAGD,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,MAAKE,KAAK,CAACQ,OAAN,CAAc,CAAd,CAAiB,EAA5B,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,GAAEN,OAAO,CAACO,SAAU,KAAIP,OAAO,CAACQ,UAAW,EAAjD,CAJF,CAfF,CADF,eAuBE;AACE,MAAA,EAAE,EAAGP,YADP;AAEE,MAAA,SAAS,MAFX;AAGE,qBAAY,qBAHd;AAIE,MAAA,IAAI,EAAC,QAJP;AAKE,MAAA,OAAO,EAAGC,SALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAvBF,CADF;AAmCD;;AAvCgC;;AA0CnCV,IAAI,CAACiB,SAAL,GAAiB;AACfd,EAAAA,SAAS,EAAEL,SAAS,CAACoB,MAAV,CAAiBC,UADb;AAEff,EAAAA,KAAK,EAAEN,SAAS,CAACoB,MAAV,CAAiBC,UAFT;AAGfd,EAAAA,SAAS,EAAEP,SAAS,CAACoB,MAAV,CAAiBC,UAHb;AAIfb,EAAAA,KAAK,EAAER,SAAS,CAACsB,MAAV,CAAiBD,UAJT;AAKfZ,EAAAA,iBAAiB,EAAET,SAAS,CAACsB,MAAV,CAAiBD,UALrB;AAMfV,EAAAA,YAAY,EAAEX,SAAS,CAACsB,MAAV,CAAiBD,UANhB;AAOfT,EAAAA,SAAS,EAAEZ,SAAS,CAACuB,IAAV,CAAeF;AAPX,CAAjB;AAUA,eAAenB,IAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport '../styles/Card.css';\n\nclass Card extends React.Component {\n  render() {\n    const { productId, title, thumbnail, price, availableQuantity, address, productIndex, addToCart } = this.props;\n\n    return (\n      <div className=\"cardContainer2\">\n        <Link // Todo o card é englobado por um componente <Link>. Tal componente permite que, quando o Card seja clicado, a página ProductDetails seja aberta.\n          to={ {\n            pathname: `/products/${productId}`, // É importante pontuar que, cada Card, possui sua própria página ProductDetails, cuja URL será /products/Id-do-item-clicado.\n            state: { // A página ProductDetails, que é um componente, recebe informações (title, thumbnail, price...) referentes ao produto. Essas informações são passadas via <Link /> e encontradas em \"const { location: { state: { title, thumbnail, price, idItem } } } = this.props\".\n              productId,\n              title,\n              thumbnail,\n              price,\n              availableQuantity,\n              address,\n              productIndex,\n            },\n          } }\n          data-testid=\"product-detail-link\"\n        >\n          <div className=\"eachCard\">\n            <h3>{ title }</h3>\n            <img src={ thumbnail } alt={ title } />\n            <p>{ `R$ ${price.toFixed(2)}` }</p>\n            <p>{ `${address.city_name}, ${address.state_name}` }</p>\n          </div>\n        </Link>\n        <button\n          id={ productIndex }\n          className\n          data-testid=\"product-add-to-cart\"\n          type=\"button\"\n          onClick={ addToCart }\n        >\n          Adicionar ao Carrinho\n        </button>\n      </div>\n    );\n  }\n}\n\nCard.propTypes = {\n  productId: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  thumbnail: PropTypes.string.isRequired,\n  price: PropTypes.number.isRequired,\n  availableQuantity: PropTypes.number.isRequired,\n  productIndex: PropTypes.number.isRequired,\n  addToCart: PropTypes.func.isRequired,\n};\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}