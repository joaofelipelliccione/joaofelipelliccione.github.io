{"ast":null,"code":"var _jsxFileName = \"/home/joaofelipe/joaofelipelliccione.github.io/projetos-trybe/2-Frontend/05_frontend-online-store-individual/src/pages/Cart.jsx\";\nimport React from 'react';\nimport CartCard from '../components/CartCard';\nimport Header from '../components/Header'; // const { location: { state: { cartItems } } } = this.props\n\nclass Cart extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.insertItensInTheCart = () => {\n      const {\n        location: {\n          state: {\n            cartItems\n          }\n        }\n      } = this.props;\n\n      if (Array.isArray(cartItems)) {\n        this.setState({\n          cartItems\n        });\n      }\n    };\n\n    this.updateLocStUserCart = () => {\n      // Função que atualiza a key \"userCart\", de local storage, sempre que algum estado da página Cart for atualizado [componentDidUpdate()].\n      const {\n        cartItems\n      } = this.state;\n      localStorage.setItem('userCart', JSON.stringify(cartItems));\n    };\n\n    this.deleteCartItem = ({\n      target\n    }) => {\n      // Função que deleta produtos do carrinho.\n      const {\n        cartItems\n      } = this.state;\n      const productIndex = cartItems.findIndex(product => product.productId === target.id); // REF: https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex\n      // OBS: Todos os botões de deletar, possuem Id igual à ID do produto. Isso possibilita o funcionamento do target acima.\n\n      this.setState({\n        cartItems: cartItems.filter((_product, index) => index !== productIndex) // Retorna todos os produtos contidos no estado 'cartItems', menos o produto excluído.\n\n      });\n    };\n\n    this.itemsOnCartCalculator = () => {\n      const userCartFromLocSt = JSON.parse(localStorage.getItem(\"userCart\"));\n      const quantitiesArray = userCartFromLocSt.map(microObj => microObj.quantity);\n      const total = quantitiesArray.reduce((result, value) => result + value);\n      localStorage.setItem(\"totalItemsOnCart\", JSON.stringify(total));\n    };\n\n    this.purchaseTVCalculator = () => {\n      const userCartFromLocSt = JSON.parse(localStorage.getItem(\"userCart\"));\n      const totalValuesArray = userCartFromLocSt.map(microObj => microObj.totalValue);\n      const total = totalValuesArray.reduce((result, value) => result + value);\n      localStorage.setItem(\"purchaseTotalValue\", JSON.stringify(total));\n    };\n\n    this.state = {\n      cartItems: []\n    };\n  }\n\n  componentDidMount() {\n    this.insertItensInTheCart();\n  }\n\n  componentDidUpdate() {\n    this.updateLocStUserCart();\n  } // insertItensInTheCart = () => { // Função que capta os itens do carrinho salvos no local storage, sempre que a página Cart for montada.\n  //   const cartItems = JSON.parse(localStorage.getItem('userCart'));\n  //   if (Array.isArray(cartItems)) { // Caso a key \"userCart\", de local storage, NÃO seja um array vazio...\n  //     this.setState({ cartItems });\n  //   }\n  // }\n\n\n  render() {\n    const {\n      cartItems,\n      purchaseTotalValue\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"cartPage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      cartItems: cartItems,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"main\", {\n      id: \"cartProductsDisplay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, cartItems.length === 0 ? /*#__PURE__*/React.createElement(\"h3\", {\n      \"data-testid\": \"shopping-cart-empty-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, \"Seu carrinho est\\xE1 vazio\") : cartItems.map(cartItem => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"eachCartCardContainer\",\n      key: cartItem.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CartCard, {\n      title: cartItem.title,\n      thumbnail: cartItem.thumbnail,\n      productPrice: cartItem.price,\n      productId: cartItem.productId,\n      deleteCartItem: this.deleteCartItem,\n      itemsOnCartCalculator: this.itemsOnCartCalculator,\n      purchaseTVCalculator: this.purchaseTVCalculator,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    })))));\n  }\n\n}\n\nexport default Cart;","map":{"version":3,"sources":["/home/joaofelipe/joaofelipelliccione.github.io/projetos-trybe/2-Frontend/05_frontend-online-store-individual/src/pages/Cart.jsx"],"names":["React","CartCard","Header","Cart","Component","constructor","props","insertItensInTheCart","location","state","cartItems","Array","isArray","setState","updateLocStUserCart","localStorage","setItem","JSON","stringify","deleteCartItem","target","productIndex","findIndex","product","productId","id","filter","_product","index","itemsOnCartCalculator","userCartFromLocSt","parse","getItem","quantitiesArray","map","microObj","quantity","total","reduce","result","value","purchaseTVCalculator","totalValuesArray","totalValue","componentDidMount","componentDidUpdate","render","purchaseTotalValue","length","cartItem","title","thumbnail","price"],"mappings":"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","sourcesContent":["import React from 'react';\nimport CartCard from '../components/CartCard';\nimport Header from '../components/Header';\n\n// const { location: { state: { cartItems } } } = this.props\nclass Cart extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      cartItems: [],\n    };\n  }\n\n  componentDidMount() {\n    this.insertItensInTheCart();\n  }\n\n  componentDidUpdate() {\n    this.updateLocStUserCart();\n  }\n\n  // insertItensInTheCart = () => { // Função que capta os itens do carrinho salvos no local storage, sempre que a página Cart for montada.\n  //   const cartItems = JSON.parse(localStorage.getItem('userCart'));\n\n  //   if (Array.isArray(cartItems)) { // Caso a key \"userCart\", de local storage, NÃO seja um array vazio...\n  //     this.setState({ cartItems });\n  //   }\n  // }\n\n  insertItensInTheCart = () => { \n    const { location: { state: { cartItems } } } = this.props\n\n    if (Array.isArray(cartItems)) { \n      this.setState({ cartItems });\n    }\n  }\n\n  updateLocStUserCart = () => { // Função que atualiza a key \"userCart\", de local storage, sempre que algum estado da página Cart for atualizado [componentDidUpdate()].\n    const { cartItems } = this.state;\n    localStorage.setItem('userCart', JSON.stringify(cartItems));\n  }\n\n  deleteCartItem = ({ target }) => { // Função que deleta produtos do carrinho.\n    const { cartItems } = this.state;\n    const productIndex = cartItems.findIndex((product) => product.productId === target.id); // REF: https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex\n    // OBS: Todos os botões de deletar, possuem Id igual à ID do produto. Isso possibilita o funcionamento do target acima.\n\n    this.setState({\n      cartItems: cartItems.filter((_product, index) => index !== productIndex), // Retorna todos os produtos contidos no estado 'cartItems', menos o produto excluído.\n    });\n  }\n\n  itemsOnCartCalculator = () => {\n    const userCartFromLocSt = JSON.parse(localStorage.getItem(\"userCart\"));\n\n    const quantitiesArray = userCartFromLocSt.map((microObj) => microObj.quantity);\n\n    const total = quantitiesArray.reduce((result, value) => result + value);\n\n    localStorage.setItem(\"totalItemsOnCart\", JSON.stringify(total));\n  }\n\n  purchaseTVCalculator = () => {\n    const userCartFromLocSt = JSON.parse(localStorage.getItem(\"userCart\"));\n\n    const totalValuesArray = userCartFromLocSt.map((microObj) => microObj.totalValue);\n\n    const total = totalValuesArray.reduce((result, value) => result + value);\n\n    localStorage.setItem(\"purchaseTotalValue\", JSON.stringify(total));\n  }\n\n  render() {\n    const { cartItems, purchaseTotalValue } = this.state;\n\n    return (\n      <div id=\"cartPage\">\n        <Header cartItems={ cartItems } />\n\n        <main id=\"cartProductsDisplay\">\n          {cartItems.length === 0\n            ? <h3 data-testid=\"shopping-cart-empty-message\">Seu carrinho está vazio</h3>\n            : cartItems.map((cartItem) => (\n              <div className=\"eachCartCardContainer\" key={ cartItem.title }>\n                <CartCard\n                  title={ cartItem.title }\n                  thumbnail={ cartItem.thumbnail }\n                  productPrice={ cartItem.price }\n                  productId={ cartItem.productId }\n                  deleteCartItem={ this.deleteCartItem }\n                  itemsOnCartCalculator={ this.itemsOnCartCalculator }\n                  purchaseTVCalculator={ this.purchaseTVCalculator }\n                />\n              </div>\n            ))}\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}