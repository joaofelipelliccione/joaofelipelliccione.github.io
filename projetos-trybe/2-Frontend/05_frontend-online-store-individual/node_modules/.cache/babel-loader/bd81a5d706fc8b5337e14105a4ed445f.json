{"ast":null,"code":"var _jsxFileName = \"/home/joaofelipe/joaofelipelliccione.github.io/projetos-trybe/2-Frontend/05_frontend-online-store-individual/src/components/CartCard.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nclass CartCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.initialProductQuant = () => {\n      // Função que pega, do local storage, a quantidade de unidades do produto. É acionada na montagem do componente.\n      const {\n        productId\n      } = this.props;\n      const userCartFromLocSt = JSON.parse(localStorage.getItem(\"userCart\"));\n      const quantOnMount = userCartFromLocSt.find(microObj => microObj.productId === productId).quantity;\n      this.setState({\n        productQuant: quantOnMount\n      });\n    };\n\n    this.itemsOnCartCalculator = () => {\n      // Função que realiza o cálculo de quantos produtos há no carrinho e, feito isso, atualiza a chave \"totalItemsOnCart\" do local sto\n      const userCartFromLocSt = JSON.parse(localStorage.getItem(\"userCart\"));\n      const quantitiesArray = userCartFromLocSt.map(microObj => microObj.quantity);\n      const total = quantitiesArray.reduce((result, value) => result + value);\n      localStorage.setItem(\"totalItemsOnCart\", JSON.stringify(total));\n    };\n\n    this.purchaseTVCalculator = () => {\n      const userCartFromLocSt = JSON.parse(localStorage.getItem(\"userCart\"));\n      const totalValuesArray = userCartFromLocSt.map(microObj => microObj.totalValue);\n      const total = totalValuesArray.reduce((result, value) => result + value);\n      localStorage.setItem(\"purchaseTotalValue\", JSON.stringify(total));\n    };\n\n    this.addItem = ({\n      target\n    }) => {\n      const userCartFromLocSt = JSON.parse(localStorage.getItem(\"userCart\"));\n      userCartFromLocSt.forEach(microObj => {\n        if (microObj.productId === target.id) {\n          microObj.quantity += 1;\n          microObj.totalValue = microObj.price * microObj.quantity;\n        }\n      });\n      const newQuantity = userCartFromLocSt.find(({\n        productId\n      }) => productId === target.id).quantity;\n      this.setState({\n        productQuant: newQuantity\n      });\n      localStorage.setItem(\"userCart\", JSON.stringify(userCartFromLocSt));\n      this.itemsOnCartCalculator();\n      this.purchaseTVCalculator();\n      window.location.reload();\n    };\n\n    this.subItem = ({\n      target\n    }) => {\n      const userCartFromLocSt = JSON.parse(localStorage.getItem(\"userCart\"));\n      userCartFromLocSt.forEach(microObj => {\n        if (microObj.productId === target.id) {\n          microObj.quantity -= 1;\n          microObj.totalValue = microObj.price * microObj.quantity;\n        }\n      });\n      const newQuantity = userCartFromLocSt.find(microObj => microObj.productId === target.id).quantity;\n\n      if (newQuantity > 0) {\n        // A respectiva condicional evita que o <output> contido entre \"-\" e \"+\" mostre um número menor que 1.\n        this.setState({\n          productQuant: newQuantity\n        });\n        localStorage.setItem(\"userCart\", JSON.stringify(userCartFromLocSt));\n        this.itemsOnCartCalculator();\n        this.purchaseTVCalculator();\n        window.location.reload();\n      }\n    };\n\n    this.state = {\n      productQuant: 1\n    };\n  }\n\n  componentDidMount() {\n    this.initialProductQuant();\n  }\n\n  render() {\n    const {\n      thumbnail,\n      title,\n      productPrice,\n      productId,\n      deleteCartItem\n    } = this.props;\n    const {\n      productQuant\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"eachCartCard\",\n      \"data-testid\": \"shopping-cart-product-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, title), /*#__PURE__*/React.createElement(\"img\", {\n      src: thumbnail,\n      alt: title,\n      width: \"170px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, `R$ ${productPrice.toFixed(2)}`), /*#__PURE__*/React.createElement(\"button\", {\n      id: productId,\n      type: \"button\",\n      onClick: deleteCartItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, \"X\"), /*#__PURE__*/React.createElement(\"button\", {\n      id: productId,\n      type: \"button\",\n      onClick: this.subItem,\n      \"data-testid\": \"product-decrease-quantity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, \"-\"), /*#__PURE__*/React.createElement(\"output\", {\n      \"data-testid\": \"shopping-cart-product-quantity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, productQuant), /*#__PURE__*/React.createElement(\"button\", {\n      id: productId,\n      type: \"button\",\n      onClick: this.addItem,\n      \"data-testid\": \"product-increase-quantity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }, \"+\"));\n  }\n\n}\n\nCartCard.propTypes = {\n  thumbnail: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  productId: PropTypes.string.isRequired,\n  deleteCartItem: PropTypes.func.isRequired\n};\nexport default CartCard;","map":{"version":3,"sources":["/home/joaofelipe/joaofelipelliccione.github.io/projetos-trybe/2-Frontend/05_frontend-online-store-individual/src/components/CartCard.jsx"],"names":["React","PropTypes","CartCard","Component","constructor","props","initialProductQuant","productId","userCartFromLocSt","JSON","parse","localStorage","getItem","quantOnMount","find","microObj","quantity","setState","productQuant","itemsOnCartCalculator","quantitiesArray","map","total","reduce","result","value","setItem","stringify","purchaseTVCalculator","totalValuesArray","totalValue","addItem","target","forEach","id","price","newQuantity","window","location","reload","subItem","state","componentDidMount","render","thumbnail","title","productPrice","deleteCartItem","toFixed","propTypes","string","isRequired","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass CartCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      productQuant: 1,\n    };\n  }\n\n  componentDidMount() {\n    this.initialProductQuant();\n  }\n\n  initialProductQuant = () => { // Função que pega, do local storage, a quantidade de unidades do produto. É acionada na montagem do componente.\n    const { productId } = this.props;\n    const userCartFromLocSt = JSON.parse(localStorage.getItem(\"userCart\"));\n    const quantOnMount = userCartFromLocSt.find((microObj) => microObj.productId === productId).quantity;\n\n    this.setState({ productQuant: quantOnMount });\n  }\n\n  itemsOnCartCalculator = () => { // Função que realiza o cálculo de quantos produtos há no carrinho e, feito isso, atualiza a chave \"totalItemsOnCart\" do local sto\n    const userCartFromLocSt = JSON.parse(localStorage.getItem(\"userCart\"));\n\n    const quantitiesArray = userCartFromLocSt.map((microObj) => microObj.quantity);\n\n    const total = quantitiesArray.reduce((result, value) => result + value);\n\n    localStorage.setItem(\"totalItemsOnCart\", JSON.stringify(total));\n  }\n\n  purchaseTVCalculator = () => {\n    const userCartFromLocSt = JSON.parse(localStorage.getItem(\"userCart\"));\n\n    const totalValuesArray = userCartFromLocSt.map((microObj) => microObj.totalValue);\n\n    const total = totalValuesArray.reduce((result, value) => result + value);\n\n    localStorage.setItem(\"purchaseTotalValue\", JSON.stringify(total));\n  }\n\n  addItem = ({ target }) => {\n    const userCartFromLocSt = JSON.parse(localStorage.getItem(\"userCart\"));\n\n    userCartFromLocSt.forEach((microObj) => {\n      if (microObj.productId === target.id) {\n        microObj.quantity += 1;\n        microObj.totalValue = microObj.price * microObj.quantity;\n      }\n    });\n\n    const newQuantity = userCartFromLocSt.find(({ productId }) => productId === target.id).quantity;\n\n    this.setState({ productQuant: newQuantity });\n    localStorage.setItem(\"userCart\", JSON.stringify(userCartFromLocSt));\n    this.itemsOnCartCalculator()\n    this.purchaseTVCalculator();\n    window.location.reload();\n  }\n\n  subItem = ({ target }) => {\n    const userCartFromLocSt = JSON.parse(localStorage.getItem(\"userCart\"));\n\n    userCartFromLocSt.forEach((microObj) => {\n      if (microObj.productId === target.id) {\n        microObj.quantity -= 1\n        microObj.totalValue = microObj.price * microObj.quantity;\n      }\n    });\n\n    const newQuantity = userCartFromLocSt.find((microObj) => microObj.productId === target.id).quantity;\n\n    if (newQuantity > 0) { // A respectiva condicional evita que o <output> contido entre \"-\" e \"+\" mostre um número menor que 1.\n      this.setState({ productQuant: newQuantity });\n      localStorage.setItem(\"userCart\", JSON.stringify(userCartFromLocSt));\n      this.itemsOnCartCalculator();\n      this.purchaseTVCalculator();\n      window.location.reload();\n    }\n  }\n\n  render() {\n    const { thumbnail, title, productPrice, productId, deleteCartItem } = this.props;\n    const { productQuant } = this.state;\n\n    return (\n      <div className=\"eachCartCard\" data-testid=\"shopping-cart-product-name\">\n        <h3>{ title }</h3>\n        <img src={ thumbnail } alt={ title } width=\"170px\" />\n        <p>{ `R$ ${ productPrice.toFixed(2) }` }</p>\n        <button\n          id={ productId }\n          type=\"button\"\n          onClick={ deleteCartItem }\n        >\n          X\n        </button>\n        <button\n          id={ productId }\n          type=\"button\"\n          onClick={ this.subItem }\n          data-testid=\"product-decrease-quantity\"\n        >\n          -\n        </button>\n        <output\n          data-testid=\"shopping-cart-product-quantity\"\n        >\n          {productQuant}\n        </output>\n        <button\n          id={ productId }\n          type=\"button\"\n          onClick={ this.addItem }\n          data-testid=\"product-increase-quantity\"\n        >\n          +\n        </button>\n      </div>\n    );\n  }\n}\n\nCartCard.propTypes = {\n  thumbnail: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  productId: PropTypes.string.isRequired,\n  deleteCartItem: PropTypes.func.isRequired,\n};\n\nexport default CartCard;\n"]},"metadata":{},"sourceType":"module"}