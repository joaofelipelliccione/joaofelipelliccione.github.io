{"ast":null,"code":"var _jsxFileName = \"/home/joaofelipe/joaofelipelliccione.github.io/projetos-trybe/2-Frontend/05_frontend-online-store-individual/src/components/Categories.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getCategories } from '../services/api';\nimport '../styles/Categories.css';\n\nclass Categories extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getCategoriesName = async () => {\n      // Função que realiza a requisição para a getCategories(), para captar todas as categorias atualmente oferecidas pelo MELI. Será chamada na montagem da página.\n      const data = await getCategories();\n      this.setState({\n        categoriesList: data\n      });\n    };\n\n    this.state = {\n      categoriesList: []\n    };\n  }\n\n  componentDidMount() {\n    this.getCategoriesName();\n  }\n\n  render() {\n    const {\n      categoriesList\n    } = this.state;\n    const {\n      categoryChecked\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"categoriesContainer2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, categoriesList.map(microObj => /*#__PURE__*/React.createElement(\"div\", {\n      id: \"eachCategory\",\n      key: microObj.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      \"data-testid\": \"category\",\n      htmlFor: microObj.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, microObj.name, /*#__PURE__*/React.createElement(\"input\", {\n      id: microObj.id,\n      name: \"category\",\n      type: \"radio\",\n      onChange: categoryChecked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nCategories.propTypes = {\n  categoryChecked: PropTypes.func.isRequired\n};\nexport default Categories;","map":{"version":3,"sources":["/home/joaofelipe/joaofelipelliccione.github.io/projetos-trybe/2-Frontend/05_frontend-online-store-individual/src/components/Categories.jsx"],"names":["React","PropTypes","getCategories","Categories","Component","constructor","props","getCategoriesName","data","setState","categoriesList","state","componentDidMount","render","categoryChecked","map","microObj","id","name","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,OAAO,0BAAP;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAYnBC,iBAZmB,GAYC,YAAY;AAAE;AAChC,YAAMC,IAAI,GAAG,MAAMN,aAAa,EAAhC;AAEA,WAAKO,QAAL,CAAc;AAAEC,QAAAA,cAAc,EAAEF;AAAlB,OAAd;AACD,KAhBkB;;AAGjB,SAAKG,KAAL,GAAa;AACXD,MAAAA,cAAc,EAAE;AADL,KAAb;AAGD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB,SAAKL,iBAAL;AACD;;AAQDM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEH,MAAAA;AAAF,QAAqB,KAAKC,KAAhC;AACA,UAAM;AAAEG,MAAAA;AAAF,QAAsB,KAAKR,KAAjC;AAEA,wBACE;AAAK,MAAA,EAAE,EAAC,sBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGI,cAAc,CAACK,GAAf,CAAoBC,QAAD,iBAClB;AAAK,MAAA,EAAE,EAAC,cAAR;AAAuB,MAAA,GAAG,EAAGA,QAAQ,CAACC,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,qBAAY,UAAnB;AAA8B,MAAA,OAAO,EAAGD,QAAQ,CAACC,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACID,QAAQ,CAACE,IADb,eAEE;AACE,MAAA,EAAE,EAAGF,QAAQ,CAACC,EADhB;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,MAAA,QAAQ,EAAGH,eAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADD,CADH,CADF;AAiBD;;AAxCsC;;AA2CzCX,UAAU,CAACgB,SAAX,GAAuB;AACrBL,EAAAA,eAAe,EAAEb,SAAS,CAACmB,IAAV,CAAeC;AADX,CAAvB;AAIA,eAAelB,UAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getCategories } from '../services/api';\nimport '../styles/Categories.css';\n\nclass Categories extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      categoriesList: [],\n    };\n  }\n\n  componentDidMount() {\n    this.getCategoriesName();\n  }\n\n  getCategoriesName = async () => { // Função que realiza a requisição para a getCategories(), para captar todas as categorias atualmente oferecidas pelo MELI. Será chamada na montagem da página.\n    const data = await getCategories();\n\n    this.setState({ categoriesList: data });\n  }\n\n  render() {\n    const { categoriesList } = this.state;\n    const { categoryChecked } = this.props;\n\n    return (\n      <div id=\"categoriesContainer2\">\n        {categoriesList.map((microObj) => (\n          <div id=\"eachCategory\" key={ microObj.id }>\n            <label data-testid=\"category\" htmlFor={ microObj.id }>\n              { microObj.name }\n              <input\n                id={ microObj.id }\n                name=\"category\"\n                type=\"radio\"\n                onChange={ categoryChecked }\n              />\n            </label>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nCategories.propTypes = {\n  categoryChecked: PropTypes.func.isRequired,\n};\n\nexport default Categories;\n"]},"metadata":{},"sourceType":"module"}