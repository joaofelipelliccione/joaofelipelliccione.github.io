version: '3.9' # Versão do compose que interpretará o docker-compose.yml
services:
  frontend:
    container_name: app_frontend
    build: ./frontend # Utilizará o Dockerfile contindo em ./frontend para gerar a imagem e buildar o container.
    restart: 'always' # Sempre que o serviço parar, ele será reiniciado. Exceto quando haja interrupção manual. 
    ports:
      - 3000:3000 # A porta interna do container (3000) será conectada a porta local 3000, para que seja possível acessar o container.
    depends_on: # front "depends on" back, ou seja, front service só será inicializado após back service.
      backend:
        condition: service_healthy
    healthcheck: # Os "healthcheck" garantem que a aplicação está operacional, antes de liberar o container.
      test: ["CMD", "lsof", "-t", "-i:3000"]
      timeout: 10s
      retries: 5
  backend:
    container_name: app_backend
    build: ./backend
    restart: 'always'
    ports:
      - 3001:3001
    depends_on:
      db:
        condition: service_healthy
    environment: # Definição das variáveis de ambientes (env) a serem utilizadas pelo container. 
      - PORT=3001
      - DB_USER=root
      - DB_PASS=123456
      - DB_HOST=db # Não será mais localhost e sim o banco MySQL que rodará no container "db", estruturado abaixo.
      - DB_NAME=TRYBE_FUTEBOL_CLUBE
      - DB_PORT=3306
    healthcheck:
      test: ["CMD", "lsof", "-t", "-i:3001"]
      timeout: 10s
      retries: 5
  db:
    image: mysql:8.0.21 # Utilizará a imagem oficial do MySQL, oriunda do Docker Hub, para buildar o container.
    container_name: db
    ports:
      - 3002:3306
    environment:
      - MYSQL_ROOT_PASSWORD=123456
    restart: 'always'
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 10s
      retries: 5
    cap_add:
      - SYS_NICE # Omite alertas menores.
